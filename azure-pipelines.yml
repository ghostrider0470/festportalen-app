# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- develop

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '2524ba39-4ad6-42f8-8190-f2035c12b0d9'

  # Web app name
  webAppName: 'festportalen-app-dev'

  # Environment name
  environmentName: 'festportalen-app-dev'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              pnpm install
            displayName: 'pnpm install'

          - task: Cache@2
            inputs:
              key: $(cacheKey)
              path: node_modules
              cacheHitVar: CACHE_RESTORED
            displayName: 'Cache yarn dependencies'

          - script: |
              yarn build
            displayName: 'pnpm build'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: 'Azure App Service Deploy'
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    WebAppName: $(webAppName)
                    SlotName: $(slotName)
                    packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
                    RuntimeStack: 'NODE|20-lts'
                    StartupCommand: 'pm2 serve /home/site/wwwroot/dist --no-daemon'